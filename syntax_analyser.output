Terminals unused in grammar

   GT
   LT
   GE
   LE
   EQ
   NE
   AND
   OR


State 62 conflicts: 1 shift/reduce
State 129 conflicts: 1 shift/reduce
State 137 conflicts: 13 shift/reduce


Grammar

    0 $accept: program $end

    1 program: CLASS PROGRAM '{' field_dec1 method_dec1 '}'

    2 field_dec1: field_dec1 field_dec
    3           | %empty

    4 method_dec1: method_dec1 method_dec
    5            | %empty

    6 field_dec: type field_dec3 ';'

    7 field_dec3: field_dec3 field_dec2
    8           | field_dec2

    9 field_dec2: '{' id '}'
   10           | '{' id '[' ']' '}'

   11 method_dec: '{' method_dec2 '}' id '(' '[' method_dec4 ',' ']' ')' block

   12 method_dec2: type
   13            | VOID

   14 method_dec4: method_dec4 method_dec3
   15            | method_dec3

   16 method_dec3: '{' type id '}'

   17 block: '{' var_decl_x stetement_x '}'

   18 var_decl_x: var_decl_x var_decl
   19           | %empty

   20 var_decl: type id_p ','

   21 type: INT
   22     | BOOLEAN

   23 stetement_x: stetement_x statement
   24            | %empty

   25 statement: location assign_op expr ';'
   26          | method_call ';'
   27          | IF '(' expr ')' block else_block
   28          | FOR id '=' expr ',' expr block
   29          | RETURN '[' expr ']'
   30          | BREAK ';'
   31          | CONTINUE ';'
   32          | block

   33 else_block: ELSE block
   34           | %empty

   35 assign_op: '='
   36          | "+="
   37          | "-="

   38 method_call: id '(' expr_x ')'
   39            | CALLOUT '(' string_literal '[' ',' callout_arg_p ',' ']' ')'

   40 location: id
   41         | id '[' expr ']'

   42 expr_x: expr_x expr
   43       | %empty

   44 expr: location
   45     | method_call
   46     | literal
   47     | expr bin_op expr
   48     | '-' '(' expr ')'
   49     | '!' '(' expr ')'
   50     | '(' expr ')'

   51 callout_arg_p: callout_arg
   52              | %empty

   53 callout_arg: expr
   54            | string_literal

   55 bin_op: arith_op
   56       | rel_op
   57       | eq_op
   58       | cond_op

   59 arith_op: '+'
   60         | '-'
   61         | '*'
   62         | '/'
   63         | '%'

   64 rel_op: '<'
   65       | '>'
   66       | "<="
   67       | ">="

   68 eq_op: "=="
   69      | "!="

   70 cond_op: "&&"
   71        | "||"

   72 literal: int_literal
   73        | char_literal
   74        | bool_literal

   75 id_p: id_p id
   76     | id

   77 id: IDENTIFIER

   78 int_literal: decimal_literal
   79            | hex_literal

   80 decimal_literal: INT_LIT

   81 hex_literal: HEX_LIT

   82 bool_literal: TRUE
   83             | FALSE

   84 char_literal: CHAR_LIT

   85 string_literal: STR_LIT


Terminals, with rules where they appear

$end (0) 0
'!' (33) 49
'%' (37) 63
'(' (40) 11 27 38 39 48 49 50
')' (41) 11 27 38 39 48 49 50
'*' (42) 61
'+' (43) 59
',' (44) 11 20 28 39
'-' (45) 48 60
'/' (47) 62
';' (59) 6 25 26 30 31
'<' (60) 64
'=' (61) 28 35
'>' (62) 65
'[' (91) 10 11 29 39 41
']' (93) 10 11 29 39 41
'{' (123) 1 9 10 11 16 17
'}' (125) 1 9 10 11 16 17
error (256)
PROGRAM (258) 1
BOOLEAN (259) 22
BREAK (260) 30
CALLOUT (261) 39
CLASS (262) 1
CONTINUE (263) 31
ELSE (264) 33
FOR (265) 28
IF (266) 27
INT (267) 21
RETURN (268) 29
TRUE (269) 82
FALSE (270) 83
VOID (271) 13
GT (272)
LT (273)
GE (274)
LE (275)
EQ (276)
NE (277)
AND (278)
OR (279)
IDENTIFIER (280) 77
HEX_LIT (281) 81
INT_LIT (282) 80
CHAR_LIT (283) 84
STR_LIT (284) 85
"+=" (285) 36
"-=" (286) 37
"<=" (287) 66
">=" (288) 67
"==" (289) 68
"!=" (290) 69
"&&" (291) 70
"||" (292) 71


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
program (56)
    on left: 1, on right: 0
field_dec1 (57)
    on left: 2 3, on right: 1 2
method_dec1 (58)
    on left: 4 5, on right: 1 4
field_dec (59)
    on left: 6, on right: 2
field_dec3 (60)
    on left: 7 8, on right: 6 7
field_dec2 (61)
    on left: 9 10, on right: 7 8
method_dec (62)
    on left: 11, on right: 4
method_dec2 (63)
    on left: 12 13, on right: 11
method_dec4 (64)
    on left: 14 15, on right: 11 14
method_dec3 (65)
    on left: 16, on right: 14 15
block (66)
    on left: 17, on right: 11 27 28 32 33
var_decl_x (67)
    on left: 18 19, on right: 17 18
var_decl (68)
    on left: 20, on right: 18
type (69)
    on left: 21 22, on right: 6 12 16 20
stetement_x (70)
    on left: 23 24, on right: 17 23
statement (71)
    on left: 25 26 27 28 29 30 31 32, on right: 23
else_block (72)
    on left: 33 34, on right: 27
assign_op (73)
    on left: 35 36 37, on right: 25
method_call (74)
    on left: 38 39, on right: 26 45
location (75)
    on left: 40 41, on right: 25 44
expr_x (76)
    on left: 42 43, on right: 38 42
expr (77)
    on left: 44 45 46 47 48 49 50, on right: 25 27 28 29 41 42 47 48
    49 50 53
callout_arg_p (78)
    on left: 51 52, on right: 39
callout_arg (79)
    on left: 53 54, on right: 51
bin_op (80)
    on left: 55 56 57 58, on right: 47
arith_op (81)
    on left: 59 60 61 62 63, on right: 55
rel_op (82)
    on left: 64 65 66 67, on right: 56
eq_op (83)
    on left: 68 69, on right: 57
cond_op (84)
    on left: 70 71, on right: 58
literal (85)
    on left: 72 73 74, on right: 46
id_p (86)
    on left: 75 76, on right: 20 75
id (87)
    on left: 77, on right: 9 10 11 16 28 38 40 41 75 76
int_literal (88)
    on left: 78 79, on right: 72
decimal_literal (89)
    on left: 80, on right: 78
hex_literal (90)
    on left: 81, on right: 79
bool_literal (91)
    on left: 82 83, on right: 74
char_literal (92)
    on left: 84, on right: 73
string_literal (93)
    on left: 85, on right: 39 54


State 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program  go to state 2


State 1

    1 program: CLASS . PROGRAM '{' field_dec1 method_dec1 '}'

    PROGRAM  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: CLASS PROGRAM . '{' field_dec1 method_dec1 '}'

    '{'  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: CLASS PROGRAM '{' . field_dec1 method_dec1 '}'

    $default  reduce using rule 3 (field_dec1)

    field_dec1  go to state 6


State 6

    1 program: CLASS PROGRAM '{' field_dec1 . method_dec1 '}'
    2 field_dec1: field_dec1 . field_dec

    BOOLEAN  shift, and go to state 7
    INT      shift, and go to state 8

    $default  reduce using rule 5 (method_dec1)

    method_dec1  go to state 9
    field_dec    go to state 10
    type         go to state 11


State 7

   22 type: BOOLEAN .

    $default  reduce using rule 22 (type)


State 8

   21 type: INT .

    $default  reduce using rule 21 (type)


State 9

    1 program: CLASS PROGRAM '{' field_dec1 method_dec1 . '}'
    4 method_dec1: method_dec1 . method_dec

    '{'  shift, and go to state 12
    '}'  shift, and go to state 13

    method_dec  go to state 14


State 10

    2 field_dec1: field_dec1 field_dec .

    $default  reduce using rule 2 (field_dec1)


State 11

    6 field_dec: type . field_dec3 ';'

    '{'  shift, and go to state 15

    field_dec3  go to state 16
    field_dec2  go to state 17


State 12

   11 method_dec: '{' . method_dec2 '}' id '(' '[' method_dec4 ',' ']' ')' block

    BOOLEAN  shift, and go to state 7
    INT      shift, and go to state 8
    VOID     shift, and go to state 18

    method_dec2  go to state 19
    type         go to state 20


State 13

    1 program: CLASS PROGRAM '{' field_dec1 method_dec1 '}' .

    $default  reduce using rule 1 (program)


State 14

    4 method_dec1: method_dec1 method_dec .

    $default  reduce using rule 4 (method_dec1)


State 15

    9 field_dec2: '{' . id '}'
   10           | '{' . id '[' ']' '}'

    IDENTIFIER  shift, and go to state 21

    id  go to state 22


State 16

    6 field_dec: type field_dec3 . ';'
    7 field_dec3: field_dec3 . field_dec2

    '{'  shift, and go to state 15
    ';'  shift, and go to state 23

    field_dec2  go to state 24


State 17

    8 field_dec3: field_dec2 .

    $default  reduce using rule 8 (field_dec3)


State 18

   13 method_dec2: VOID .

    $default  reduce using rule 13 (method_dec2)


State 19

   11 method_dec: '{' method_dec2 . '}' id '(' '[' method_dec4 ',' ']' ')' block

    '}'  shift, and go to state 25


State 20

   12 method_dec2: type .

    $default  reduce using rule 12 (method_dec2)


State 21

   77 id: IDENTIFIER .

    $default  reduce using rule 77 (id)


State 22

    9 field_dec2: '{' id . '}'
   10           | '{' id . '[' ']' '}'

    '['  shift, and go to state 26
    '}'  shift, and go to state 27


State 23

    6 field_dec: type field_dec3 ';' .

    $default  reduce using rule 6 (field_dec)


State 24

    7 field_dec3: field_dec3 field_dec2 .

    $default  reduce using rule 7 (field_dec3)


State 25

   11 method_dec: '{' method_dec2 '}' . id '(' '[' method_dec4 ',' ']' ')' block

    IDENTIFIER  shift, and go to state 21

    id  go to state 28


State 26

   10 field_dec2: '{' id '[' . ']' '}'

    ']'  shift, and go to state 29


State 27

    9 field_dec2: '{' id '}' .

    $default  reduce using rule 9 (field_dec2)


State 28

   11 method_dec: '{' method_dec2 '}' id . '(' '[' method_dec4 ',' ']' ')' block

    '('  shift, and go to state 30


State 29

   10 field_dec2: '{' id '[' ']' . '}'

    '}'  shift, and go to state 31


State 30

   11 method_dec: '{' method_dec2 '}' id '(' . '[' method_dec4 ',' ']' ')' block

    '['  shift, and go to state 32


State 31

   10 field_dec2: '{' id '[' ']' '}' .

    $default  reduce using rule 10 (field_dec2)


State 32

   11 method_dec: '{' method_dec2 '}' id '(' '[' . method_dec4 ',' ']' ')' block

    '{'  shift, and go to state 33

    method_dec4  go to state 34
    method_dec3  go to state 35


State 33

   16 method_dec3: '{' . type id '}'

    BOOLEAN  shift, and go to state 7
    INT      shift, and go to state 8

    type  go to state 36


State 34

   11 method_dec: '{' method_dec2 '}' id '(' '[' method_dec4 . ',' ']' ')' block
   14 method_dec4: method_dec4 . method_dec3

    '{'  shift, and go to state 33
    ','  shift, and go to state 37

    method_dec3  go to state 38


State 35

   15 method_dec4: method_dec3 .

    $default  reduce using rule 15 (method_dec4)


State 36

   16 method_dec3: '{' type . id '}'

    IDENTIFIER  shift, and go to state 21

    id  go to state 39


State 37

   11 method_dec: '{' method_dec2 '}' id '(' '[' method_dec4 ',' . ']' ')' block

    ']'  shift, and go to state 40


State 38

   14 method_dec4: method_dec4 method_dec3 .

    $default  reduce using rule 14 (method_dec4)


State 39

   16 method_dec3: '{' type id . '}'

    '}'  shift, and go to state 41


State 40

   11 method_dec: '{' method_dec2 '}' id '(' '[' method_dec4 ',' ']' . ')' block

    ')'  shift, and go to state 42


State 41

   16 method_dec3: '{' type id '}' .

    $default  reduce using rule 16 (method_dec3)


State 42

   11 method_dec: '{' method_dec2 '}' id '(' '[' method_dec4 ',' ']' ')' . block

    '{'  shift, and go to state 43

    block  go to state 44


State 43

   17 block: '{' . var_decl_x stetement_x '}'

    $default  reduce using rule 19 (var_decl_x)

    var_decl_x  go to state 45


State 44

   11 method_dec: '{' method_dec2 '}' id '(' '[' method_dec4 ',' ']' ')' block .

    $default  reduce using rule 11 (method_dec)


State 45

   17 block: '{' var_decl_x . stetement_x '}'
   18 var_decl_x: var_decl_x . var_decl

    BOOLEAN  shift, and go to state 7
    INT      shift, and go to state 8

    $default  reduce using rule 24 (stetement_x)

    var_decl     go to state 46
    type         go to state 47
    stetement_x  go to state 48


State 46

   18 var_decl_x: var_decl_x var_decl .

    $default  reduce using rule 18 (var_decl_x)


State 47

   20 var_decl: type . id_p ','

    IDENTIFIER  shift, and go to state 21

    id_p  go to state 49
    id    go to state 50


State 48

   17 block: '{' var_decl_x stetement_x . '}'
   23 stetement_x: stetement_x . statement

    BREAK       shift, and go to state 51
    CALLOUT     shift, and go to state 52
    CONTINUE    shift, and go to state 53
    FOR         shift, and go to state 54
    IF          shift, and go to state 55
    RETURN      shift, and go to state 56
    IDENTIFIER  shift, and go to state 21
    '{'         shift, and go to state 43
    '}'         shift, and go to state 57

    block        go to state 58
    statement    go to state 59
    method_call  go to state 60
    location     go to state 61
    id           go to state 62


State 49

   20 var_decl: type id_p . ','
   75 id_p: id_p . id

    IDENTIFIER  shift, and go to state 21
    ','         shift, and go to state 63

    id  go to state 64


State 50

   76 id_p: id .

    $default  reduce using rule 76 (id_p)


State 51

   30 statement: BREAK . ';'

    ';'  shift, and go to state 65


State 52

   39 method_call: CALLOUT . '(' string_literal '[' ',' callout_arg_p ',' ']' ')'

    '('  shift, and go to state 66


State 53

   31 statement: CONTINUE . ';'

    ';'  shift, and go to state 67


State 54

   28 statement: FOR . id '=' expr ',' expr block

    IDENTIFIER  shift, and go to state 21

    id  go to state 68


State 55

   27 statement: IF . '(' expr ')' block else_block

    '('  shift, and go to state 69


State 56

   29 statement: RETURN . '[' expr ']'

    '['  shift, and go to state 70


State 57

   17 block: '{' var_decl_x stetement_x '}' .

    $default  reduce using rule 17 (block)


State 58

   32 statement: block .

    $default  reduce using rule 32 (statement)


State 59

   23 stetement_x: stetement_x statement .

    $default  reduce using rule 23 (stetement_x)


State 60

   26 statement: method_call . ';'

    ';'  shift, and go to state 71


State 61

   25 statement: location . assign_op expr ';'

    '='   shift, and go to state 72
    "+="  shift, and go to state 73
    "-="  shift, and go to state 74

    assign_op  go to state 75


State 62

   38 method_call: id . '(' expr_x ')'
   40 location: id .
   41         | id . '[' expr ']'

    '('  shift, and go to state 76
    '['  shift, and go to state 77

    '('       [reduce using rule 40 (location)]
    $default  reduce using rule 40 (location)


State 63

   20 var_decl: type id_p ',' .

    $default  reduce using rule 20 (var_decl)


State 64

   75 id_p: id_p id .

    $default  reduce using rule 75 (id_p)


State 65

   30 statement: BREAK ';' .

    $default  reduce using rule 30 (statement)


State 66

   39 method_call: CALLOUT '(' . string_literal '[' ',' callout_arg_p ',' ']' ')'

    STR_LIT  shift, and go to state 78

    string_literal  go to state 79


State 67

   31 statement: CONTINUE ';' .

    $default  reduce using rule 31 (statement)


State 68

   28 statement: FOR id . '=' expr ',' expr block

    '='  shift, and go to state 80


State 69

   27 statement: IF '(' . expr ')' block else_block

    CALLOUT     shift, and go to state 52
    TRUE        shift, and go to state 81
    FALSE       shift, and go to state 82
    IDENTIFIER  shift, and go to state 21
    HEX_LIT     shift, and go to state 83
    INT_LIT     shift, and go to state 84
    CHAR_LIT    shift, and go to state 85
    '-'         shift, and go to state 86
    '('         shift, and go to state 87
    '!'         shift, and go to state 88

    method_call      go to state 89
    location         go to state 90
    expr             go to state 91
    literal          go to state 92
    id               go to state 62
    int_literal      go to state 93
    decimal_literal  go to state 94
    hex_literal      go to state 95
    bool_literal     go to state 96
    char_literal     go to state 97


State 70

   29 statement: RETURN '[' . expr ']'

    CALLOUT     shift, and go to state 52
    TRUE        shift, and go to state 81
    FALSE       shift, and go to state 82
    IDENTIFIER  shift, and go to state 21
    HEX_LIT     shift, and go to state 83
    INT_LIT     shift, and go to state 84
    CHAR_LIT    shift, and go to state 85
    '-'         shift, and go to state 86
    '('         shift, and go to state 87
    '!'         shift, and go to state 88

    method_call      go to state 89
    location         go to state 90
    expr             go to state 98
    literal          go to state 92
    id               go to state 62
    int_literal      go to state 93
    decimal_literal  go to state 94
    hex_literal      go to state 95
    bool_literal     go to state 96
    char_literal     go to state 97


State 71

   26 statement: method_call ';' .

    $default  reduce using rule 26 (statement)


State 72

   35 assign_op: '=' .

    $default  reduce using rule 35 (assign_op)


State 73

   36 assign_op: "+=" .

    $default  reduce using rule 36 (assign_op)


State 74

   37 assign_op: "-=" .

    $default  reduce using rule 37 (assign_op)


State 75

   25 statement: location assign_op . expr ';'

    CALLOUT     shift, and go to state 52
    TRUE        shift, and go to state 81
    FALSE       shift, and go to state 82
    IDENTIFIER  shift, and go to state 21
    HEX_LIT     shift, and go to state 83
    INT_LIT     shift, and go to state 84
    CHAR_LIT    shift, and go to state 85
    '-'         shift, and go to state 86
    '('         shift, and go to state 87
    '!'         shift, and go to state 88

    method_call      go to state 89
    location         go to state 90
    expr             go to state 99
    literal          go to state 92
    id               go to state 62
    int_literal      go to state 93
    decimal_literal  go to state 94
    hex_literal      go to state 95
    bool_literal     go to state 96
    char_literal     go to state 97


State 76

   38 method_call: id '(' . expr_x ')'

    $default  reduce using rule 43 (expr_x)

    expr_x  go to state 100


State 77

   41 location: id '[' . expr ']'

    CALLOUT     shift, and go to state 52
    TRUE        shift, and go to state 81
    FALSE       shift, and go to state 82
    IDENTIFIER  shift, and go to state 21
    HEX_LIT     shift, and go to state 83
    INT_LIT     shift, and go to state 84
    CHAR_LIT    shift, and go to state 85
    '-'         shift, and go to state 86
    '('         shift, and go to state 87
    '!'         shift, and go to state 88

    method_call      go to state 89
    location         go to state 90
    expr             go to state 101
    literal          go to state 92
    id               go to state 62
    int_literal      go to state 93
    decimal_literal  go to state 94
    hex_literal      go to state 95
    bool_literal     go to state 96
    char_literal     go to state 97


State 78

   85 string_literal: STR_LIT .

    $default  reduce using rule 85 (string_literal)


State 79

   39 method_call: CALLOUT '(' string_literal . '[' ',' callout_arg_p ',' ']' ')'

    '['  shift, and go to state 102


State 80

   28 statement: FOR id '=' . expr ',' expr block

    CALLOUT     shift, and go to state 52
    TRUE        shift, and go to state 81
    FALSE       shift, and go to state 82
    IDENTIFIER  shift, and go to state 21
    HEX_LIT     shift, and go to state 83
    INT_LIT     shift, and go to state 84
    CHAR_LIT    shift, and go to state 85
    '-'         shift, and go to state 86
    '('         shift, and go to state 87
    '!'         shift, and go to state 88

    method_call      go to state 89
    location         go to state 90
    expr             go to state 103
    literal          go to state 92
    id               go to state 62
    int_literal      go to state 93
    decimal_literal  go to state 94
    hex_literal      go to state 95
    bool_literal     go to state 96
    char_literal     go to state 97


State 81

   82 bool_literal: TRUE .

    $default  reduce using rule 82 (bool_literal)


State 82

   83 bool_literal: FALSE .

    $default  reduce using rule 83 (bool_literal)


State 83

   81 hex_literal: HEX_LIT .

    $default  reduce using rule 81 (hex_literal)


State 84

   80 decimal_literal: INT_LIT .

    $default  reduce using rule 80 (decimal_literal)


State 85

   84 char_literal: CHAR_LIT .

    $default  reduce using rule 84 (char_literal)


State 86

   48 expr: '-' . '(' expr ')'

    '('  shift, and go to state 104


State 87

   50 expr: '(' . expr ')'

    CALLOUT     shift, and go to state 52
    TRUE        shift, and go to state 81
    FALSE       shift, and go to state 82
    IDENTIFIER  shift, and go to state 21
    HEX_LIT     shift, and go to state 83
    INT_LIT     shift, and go to state 84
    CHAR_LIT    shift, and go to state 85
    '-'         shift, and go to state 86
    '('         shift, and go to state 87
    '!'         shift, and go to state 88

    method_call      go to state 89
    location         go to state 90
    expr             go to state 105
    literal          go to state 92
    id               go to state 62
    int_literal      go to state 93
    decimal_literal  go to state 94
    hex_literal      go to state 95
    bool_literal     go to state 96
    char_literal     go to state 97


State 88

   49 expr: '!' . '(' expr ')'

    '('  shift, and go to state 106


State 89

   45 expr: method_call .

    $default  reduce using rule 45 (expr)


State 90

   44 expr: location .

    $default  reduce using rule 44 (expr)


State 91

   27 statement: IF '(' expr . ')' block else_block
   47 expr: expr . bin_op expr

    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111
    '<'   shift, and go to state 112
    '>'   shift, and go to state 113
    ')'   shift, and go to state 114
    "<="  shift, and go to state 115
    ">="  shift, and go to state 116
    "=="  shift, and go to state 117
    "!="  shift, and go to state 118
    "&&"  shift, and go to state 119
    "||"  shift, and go to state 120

    bin_op    go to state 121
    arith_op  go to state 122
    rel_op    go to state 123
    eq_op     go to state 124
    cond_op   go to state 125


State 92

   46 expr: literal .

    $default  reduce using rule 46 (expr)


State 93

   72 literal: int_literal .

    $default  reduce using rule 72 (literal)


State 94

   78 int_literal: decimal_literal .

    $default  reduce using rule 78 (int_literal)


State 95

   79 int_literal: hex_literal .

    $default  reduce using rule 79 (int_literal)


State 96

   74 literal: bool_literal .

    $default  reduce using rule 74 (literal)


State 97

   73 literal: char_literal .

    $default  reduce using rule 73 (literal)


State 98

   29 statement: RETURN '[' expr . ']'
   47 expr: expr . bin_op expr

    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111
    '<'   shift, and go to state 112
    '>'   shift, and go to state 113
    ']'   shift, and go to state 126
    "<="  shift, and go to state 115
    ">="  shift, and go to state 116
    "=="  shift, and go to state 117
    "!="  shift, and go to state 118
    "&&"  shift, and go to state 119
    "||"  shift, and go to state 120

    bin_op    go to state 121
    arith_op  go to state 122
    rel_op    go to state 123
    eq_op     go to state 124
    cond_op   go to state 125


State 99

   25 statement: location assign_op expr . ';'
   47 expr: expr . bin_op expr

    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111
    '<'   shift, and go to state 112
    '>'   shift, and go to state 113
    ';'   shift, and go to state 127
    "<="  shift, and go to state 115
    ">="  shift, and go to state 116
    "=="  shift, and go to state 117
    "!="  shift, and go to state 118
    "&&"  shift, and go to state 119
    "||"  shift, and go to state 120

    bin_op    go to state 121
    arith_op  go to state 122
    rel_op    go to state 123
    eq_op     go to state 124
    cond_op   go to state 125


State 100

   38 method_call: id '(' expr_x . ')'
   42 expr_x: expr_x . expr

    CALLOUT     shift, and go to state 52
    TRUE        shift, and go to state 81
    FALSE       shift, and go to state 82
    IDENTIFIER  shift, and go to state 21
    HEX_LIT     shift, and go to state 83
    INT_LIT     shift, and go to state 84
    CHAR_LIT    shift, and go to state 85
    '-'         shift, and go to state 86
    '('         shift, and go to state 87
    ')'         shift, and go to state 128
    '!'         shift, and go to state 88

    method_call      go to state 89
    location         go to state 90
    expr             go to state 129
    literal          go to state 92
    id               go to state 62
    int_literal      go to state 93
    decimal_literal  go to state 94
    hex_literal      go to state 95
    bool_literal     go to state 96
    char_literal     go to state 97


State 101

   41 location: id '[' expr . ']'
   47 expr: expr . bin_op expr

    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111
    '<'   shift, and go to state 112
    '>'   shift, and go to state 113
    ']'   shift, and go to state 130
    "<="  shift, and go to state 115
    ">="  shift, and go to state 116
    "=="  shift, and go to state 117
    "!="  shift, and go to state 118
    "&&"  shift, and go to state 119
    "||"  shift, and go to state 120

    bin_op    go to state 121
    arith_op  go to state 122
    rel_op    go to state 123
    eq_op     go to state 124
    cond_op   go to state 125


State 102

   39 method_call: CALLOUT '(' string_literal '[' . ',' callout_arg_p ',' ']' ')'

    ','  shift, and go to state 131


State 103

   28 statement: FOR id '=' expr . ',' expr block
   47 expr: expr . bin_op expr

    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111
    '<'   shift, and go to state 112
    '>'   shift, and go to state 113
    ','   shift, and go to state 132
    "<="  shift, and go to state 115
    ">="  shift, and go to state 116
    "=="  shift, and go to state 117
    "!="  shift, and go to state 118
    "&&"  shift, and go to state 119
    "||"  shift, and go to state 120

    bin_op    go to state 121
    arith_op  go to state 122
    rel_op    go to state 123
    eq_op     go to state 124
    cond_op   go to state 125


State 104

   48 expr: '-' '(' . expr ')'

    CALLOUT     shift, and go to state 52
    TRUE        shift, and go to state 81
    FALSE       shift, and go to state 82
    IDENTIFIER  shift, and go to state 21
    HEX_LIT     shift, and go to state 83
    INT_LIT     shift, and go to state 84
    CHAR_LIT    shift, and go to state 85
    '-'         shift, and go to state 86
    '('         shift, and go to state 87
    '!'         shift, and go to state 88

    method_call      go to state 89
    location         go to state 90
    expr             go to state 133
    literal          go to state 92
    id               go to state 62
    int_literal      go to state 93
    decimal_literal  go to state 94
    hex_literal      go to state 95
    bool_literal     go to state 96
    char_literal     go to state 97


State 105

   47 expr: expr . bin_op expr
   50     | '(' expr . ')'

    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111
    '<'   shift, and go to state 112
    '>'   shift, and go to state 113
    ')'   shift, and go to state 134
    "<="  shift, and go to state 115
    ">="  shift, and go to state 116
    "=="  shift, and go to state 117
    "!="  shift, and go to state 118
    "&&"  shift, and go to state 119
    "||"  shift, and go to state 120

    bin_op    go to state 121
    arith_op  go to state 122
    rel_op    go to state 123
    eq_op     go to state 124
    cond_op   go to state 125


State 106

   49 expr: '!' '(' . expr ')'

    CALLOUT     shift, and go to state 52
    TRUE        shift, and go to state 81
    FALSE       shift, and go to state 82
    IDENTIFIER  shift, and go to state 21
    HEX_LIT     shift, and go to state 83
    INT_LIT     shift, and go to state 84
    CHAR_LIT    shift, and go to state 85
    '-'         shift, and go to state 86
    '('         shift, and go to state 87
    '!'         shift, and go to state 88

    method_call      go to state 89
    location         go to state 90
    expr             go to state 135
    literal          go to state 92
    id               go to state 62
    int_literal      go to state 93
    decimal_literal  go to state 94
    hex_literal      go to state 95
    bool_literal     go to state 96
    char_literal     go to state 97


State 107

   59 arith_op: '+' .

    $default  reduce using rule 59 (arith_op)


State 108

   60 arith_op: '-' .

    $default  reduce using rule 60 (arith_op)


State 109

   61 arith_op: '*' .

    $default  reduce using rule 61 (arith_op)


State 110

   62 arith_op: '/' .

    $default  reduce using rule 62 (arith_op)


State 111

   63 arith_op: '%' .

    $default  reduce using rule 63 (arith_op)


State 112

   64 rel_op: '<' .

    $default  reduce using rule 64 (rel_op)


State 113

   65 rel_op: '>' .

    $default  reduce using rule 65 (rel_op)


State 114

   27 statement: IF '(' expr ')' . block else_block

    '{'  shift, and go to state 43

    block  go to state 136


State 115

   66 rel_op: "<=" .

    $default  reduce using rule 66 (rel_op)


State 116

   67 rel_op: ">=" .

    $default  reduce using rule 67 (rel_op)


State 117

   68 eq_op: "==" .

    $default  reduce using rule 68 (eq_op)


State 118

   69 eq_op: "!=" .

    $default  reduce using rule 69 (eq_op)


State 119

   70 cond_op: "&&" .

    $default  reduce using rule 70 (cond_op)


State 120

   71 cond_op: "||" .

    $default  reduce using rule 71 (cond_op)


State 121

   47 expr: expr bin_op . expr

    CALLOUT     shift, and go to state 52
    TRUE        shift, and go to state 81
    FALSE       shift, and go to state 82
    IDENTIFIER  shift, and go to state 21
    HEX_LIT     shift, and go to state 83
    INT_LIT     shift, and go to state 84
    CHAR_LIT    shift, and go to state 85
    '-'         shift, and go to state 86
    '('         shift, and go to state 87
    '!'         shift, and go to state 88

    method_call      go to state 89
    location         go to state 90
    expr             go to state 137
    literal          go to state 92
    id               go to state 62
    int_literal      go to state 93
    decimal_literal  go to state 94
    hex_literal      go to state 95
    bool_literal     go to state 96
    char_literal     go to state 97


State 122

   55 bin_op: arith_op .

    $default  reduce using rule 55 (bin_op)


State 123

   56 bin_op: rel_op .

    $default  reduce using rule 56 (bin_op)


State 124

   57 bin_op: eq_op .

    $default  reduce using rule 57 (bin_op)


State 125

   58 bin_op: cond_op .

    $default  reduce using rule 58 (bin_op)


State 126

   29 statement: RETURN '[' expr ']' .

    $default  reduce using rule 29 (statement)


State 127

   25 statement: location assign_op expr ';' .

    $default  reduce using rule 25 (statement)


State 128

   38 method_call: id '(' expr_x ')' .

    $default  reduce using rule 38 (method_call)


State 129

   42 expr_x: expr_x expr .
   47 expr: expr . bin_op expr

    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111
    '<'   shift, and go to state 112
    '>'   shift, and go to state 113
    "<="  shift, and go to state 115
    ">="  shift, and go to state 116
    "=="  shift, and go to state 117
    "!="  shift, and go to state 118
    "&&"  shift, and go to state 119
    "||"  shift, and go to state 120

    '-'       [reduce using rule 42 (expr_x)]
    $default  reduce using rule 42 (expr_x)

    bin_op    go to state 121
    arith_op  go to state 122
    rel_op    go to state 123
    eq_op     go to state 124
    cond_op   go to state 125


State 130

   41 location: id '[' expr ']' .

    $default  reduce using rule 41 (location)


State 131

   39 method_call: CALLOUT '(' string_literal '[' ',' . callout_arg_p ',' ']' ')'

    CALLOUT     shift, and go to state 52
    TRUE        shift, and go to state 81
    FALSE       shift, and go to state 82
    IDENTIFIER  shift, and go to state 21
    HEX_LIT     shift, and go to state 83
    INT_LIT     shift, and go to state 84
    CHAR_LIT    shift, and go to state 85
    STR_LIT     shift, and go to state 78
    '-'         shift, and go to state 86
    '('         shift, and go to state 87
    '!'         shift, and go to state 88

    $default  reduce using rule 52 (callout_arg_p)

    method_call      go to state 89
    location         go to state 90
    expr             go to state 138
    callout_arg_p    go to state 139
    callout_arg      go to state 140
    literal          go to state 92
    id               go to state 62
    int_literal      go to state 93
    decimal_literal  go to state 94
    hex_literal      go to state 95
    bool_literal     go to state 96
    char_literal     go to state 97
    string_literal   go to state 141


State 132

   28 statement: FOR id '=' expr ',' . expr block

    CALLOUT     shift, and go to state 52
    TRUE        shift, and go to state 81
    FALSE       shift, and go to state 82
    IDENTIFIER  shift, and go to state 21
    HEX_LIT     shift, and go to state 83
    INT_LIT     shift, and go to state 84
    CHAR_LIT    shift, and go to state 85
    '-'         shift, and go to state 86
    '('         shift, and go to state 87
    '!'         shift, and go to state 88

    method_call      go to state 89
    location         go to state 90
    expr             go to state 142
    literal          go to state 92
    id               go to state 62
    int_literal      go to state 93
    decimal_literal  go to state 94
    hex_literal      go to state 95
    bool_literal     go to state 96
    char_literal     go to state 97


State 133

   47 expr: expr . bin_op expr
   48     | '-' '(' expr . ')'

    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111
    '<'   shift, and go to state 112
    '>'   shift, and go to state 113
    ')'   shift, and go to state 143
    "<="  shift, and go to state 115
    ">="  shift, and go to state 116
    "=="  shift, and go to state 117
    "!="  shift, and go to state 118
    "&&"  shift, and go to state 119
    "||"  shift, and go to state 120

    bin_op    go to state 121
    arith_op  go to state 122
    rel_op    go to state 123
    eq_op     go to state 124
    cond_op   go to state 125


State 134

   50 expr: '(' expr ')' .

    $default  reduce using rule 50 (expr)


State 135

   47 expr: expr . bin_op expr
   49     | '!' '(' expr . ')'

    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111
    '<'   shift, and go to state 112
    '>'   shift, and go to state 113
    ')'   shift, and go to state 144
    "<="  shift, and go to state 115
    ">="  shift, and go to state 116
    "=="  shift, and go to state 117
    "!="  shift, and go to state 118
    "&&"  shift, and go to state 119
    "||"  shift, and go to state 120

    bin_op    go to state 121
    arith_op  go to state 122
    rel_op    go to state 123
    eq_op     go to state 124
    cond_op   go to state 125


State 136

   27 statement: IF '(' expr ')' block . else_block

    ELSE  shift, and go to state 145

    $default  reduce using rule 34 (else_block)

    else_block  go to state 146


State 137

   47 expr: expr . bin_op expr
   47     | expr bin_op expr .

    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111
    '<'   shift, and go to state 112
    '>'   shift, and go to state 113
    "<="  shift, and go to state 115
    ">="  shift, and go to state 116
    "=="  shift, and go to state 117
    "!="  shift, and go to state 118
    "&&"  shift, and go to state 119
    "||"  shift, and go to state 120

    '+'       [reduce using rule 47 (expr)]
    '-'       [reduce using rule 47 (expr)]
    '*'       [reduce using rule 47 (expr)]
    '/'       [reduce using rule 47 (expr)]
    '%'       [reduce using rule 47 (expr)]
    '<'       [reduce using rule 47 (expr)]
    '>'       [reduce using rule 47 (expr)]
    "<="      [reduce using rule 47 (expr)]
    ">="      [reduce using rule 47 (expr)]
    "=="      [reduce using rule 47 (expr)]
    "!="      [reduce using rule 47 (expr)]
    "&&"      [reduce using rule 47 (expr)]
    "||"      [reduce using rule 47 (expr)]
    $default  reduce using rule 47 (expr)

    bin_op    go to state 121
    arith_op  go to state 122
    rel_op    go to state 123
    eq_op     go to state 124
    cond_op   go to state 125


State 138

   47 expr: expr . bin_op expr
   53 callout_arg: expr .

    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111
    '<'   shift, and go to state 112
    '>'   shift, and go to state 113
    "<="  shift, and go to state 115
    ">="  shift, and go to state 116
    "=="  shift, and go to state 117
    "!="  shift, and go to state 118
    "&&"  shift, and go to state 119
    "||"  shift, and go to state 120

    $default  reduce using rule 53 (callout_arg)

    bin_op    go to state 121
    arith_op  go to state 122
    rel_op    go to state 123
    eq_op     go to state 124
    cond_op   go to state 125


State 139

   39 method_call: CALLOUT '(' string_literal '[' ',' callout_arg_p . ',' ']' ')'

    ','  shift, and go to state 147


State 140

   51 callout_arg_p: callout_arg .

    $default  reduce using rule 51 (callout_arg_p)


State 141

   54 callout_arg: string_literal .

    $default  reduce using rule 54 (callout_arg)


State 142

   28 statement: FOR id '=' expr ',' expr . block
   47 expr: expr . bin_op expr

    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111
    '<'   shift, and go to state 112
    '>'   shift, and go to state 113
    '{'   shift, and go to state 43
    "<="  shift, and go to state 115
    ">="  shift, and go to state 116
    "=="  shift, and go to state 117
    "!="  shift, and go to state 118
    "&&"  shift, and go to state 119
    "||"  shift, and go to state 120

    block     go to state 148
    bin_op    go to state 121
    arith_op  go to state 122
    rel_op    go to state 123
    eq_op     go to state 124
    cond_op   go to state 125


State 143

   48 expr: '-' '(' expr ')' .

    $default  reduce using rule 48 (expr)


State 144

   49 expr: '!' '(' expr ')' .

    $default  reduce using rule 49 (expr)


State 145

   33 else_block: ELSE . block

    '{'  shift, and go to state 43

    block  go to state 149


State 146

   27 statement: IF '(' expr ')' block else_block .

    $default  reduce using rule 27 (statement)


State 147

   39 method_call: CALLOUT '(' string_literal '[' ',' callout_arg_p ',' . ']' ')'

    ']'  shift, and go to state 150


State 148

   28 statement: FOR id '=' expr ',' expr block .

    $default  reduce using rule 28 (statement)


State 149

   33 else_block: ELSE block .

    $default  reduce using rule 33 (else_block)


State 150

   39 method_call: CALLOUT '(' string_literal '[' ',' callout_arg_p ',' ']' . ')'

    ')'  shift, and go to state 151


State 151

   39 method_call: CALLOUT '(' string_literal '[' ',' callout_arg_p ',' ']' ')' .

    $default  reduce using rule 39 (method_call)
