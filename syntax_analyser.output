Terminals unused in grammar

   GT
   LT
   GE
   LE
   EQ
   NE
   AND
   OR


Grammar

    0 $accept: program $end

    1 program: CLASS PROGRAM '{' field_dec1 method_dec1 '}'

    2 field_dec1: field_dec1 field_dec
    3           | /* empty */

    4 method_dec1: method_dec1 method_dec
    5            | /* empty */

    6 field_dec: type field_dec3 ';'

    7 field_dec3: field_dec3 ',' field_dec2
    8           | field_dec2

    9 field_dec2: '{' id '}'
   10           | '{' id '[' INT_LIT ']' '}'

   11 method_dec: '{' method_dec2 '}' id '(' '[' method_dec4 ']' ')' block

   12 method_dec2: type
   13            | VOID

   14 method_dec4: method_dec4 ',' method_dec3
   15            | method_dec3

   16 method_dec3: '{' type id '}'

   17 block: '{' var_decl_x stetement_x '}'

   18 var_decl_x: var_decl_x var_decl
   19           | /* empty */

   20 var_decl: type id_p ';'

   21 id_p: id_p ',' id
   22     | id

   23 type: INT
   24     | BOOLEAN

   25 stetement_x: stetement_x statement
   26            | /* empty */

   27 statement: location assign_op expr ';'
   28          | method_call ';'
   29          | IF '(' expr ')' block '[' else_block ']'
   30          | FOR id '=' expr ',' expr block
   31          | RETURN '[' expr ']' ';'
   32          | BREAK ';'
   33          | CONTINUE ';'
   34          | block

   35 else_block: ELSE block
   36           | /* empty */

   37 assign_op: '='
   38          | PEQ
   39          | MEQ

   40 method_call: id '(' expr_x ')'
   41            | CALLOUT '(' string_literal '[' callout_arg_p ']' ')'

   42 location: id
   43         | id '[' expr ']'

   44 expr_x: expr_x ',' expr
   45       | expr

   46 expr: location
   47     | method_call
   48     | literal
   49     | '(' expr bin_op expr ')'
   50     | '-' '(' expr ')'
   51     | '!' '(' expr ')'
   52     | '(' expr ')'

   53 callout_arg_p: callout_arg_p ',' callout_arg
   54              | callout_arg

   55 callout_arg: expr
   56            | string_literal

   57 bin_op: arith_op
   58       | rel_op
   59       | eq_op
   60       | cond_op

   61 arith_op: '+'
   62         | '-'
   63         | '*'
   64         | '/'
   65         | '%'

   66 rel_op: '<'
   67       | '>'
   68       | "<="
   69       | ">="

   70 eq_op: "=="
   71      | "!="

   72 cond_op: "&&"
   73        | "||"

   74 literal: int_literal
   75        | char_literal
   76        | bool_literal

   77 id: IDENTIFIER

   78 int_literal: decimal_literal
   79            | hex_literal

   80 decimal_literal: INT_LIT

   81 hex_literal: HEX_LIT

   82 bool_literal: TRUE
   83             | FALSE

   84 char_literal: CHAR_LIT

   85 string_literal: STR_LIT


Terminals, with rules where they appear

$end (0) 0
'!' (33) 51
'%' (37) 65
'(' (40) 11 29 40 41 49 50 51 52
')' (41) 11 29 40 41 49 50 51 52
'*' (42) 63
'+' (43) 61
',' (44) 7 14 21 30 44 53
'-' (45) 50 62
'/' (47) 64
';' (59) 6 20 27 28 31 32 33
'<' (60) 66
'=' (61) 30 37
'>' (62) 67
'[' (91) 10 11 29 31 41 43
']' (93) 10 11 29 31 41 43
'{' (123) 1 9 10 11 16 17
'}' (125) 1 9 10 11 16 17
error (256)
PROGRAM (258) 1
BOOLEAN (259) 24
BREAK (260) 32
CALLOUT (261) 41
CLASS (262) 1
CONTINUE (263) 33
ELSE (264) 35
FOR (265) 30
IF (266) 29
INT (267) 23
RETURN (268) 31
TRUE (269) 82
FALSE (270) 83
VOID (271) 13
GT (272)
LT (273)
GE (274)
LE (275)
EQ (276)
NE (277)
AND (278)
OR (279)
IDENTIFIER (280) 77
PEQ (281) 38
MEQ (282) 39
HEX_LIT (283) 81
INT_LIT (284) 10 80
CHAR_LIT (285) 84
STR_LIT (286) 85
"<=" (287) 68
">=" (288) 69
"==" (289) 70
"!=" (290) 71
"&&" (291) 72
"||" (292) 73


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
program (56)
    on left: 1, on right: 0
field_dec1 (57)
    on left: 2 3, on right: 1 2
method_dec1 (58)
    on left: 4 5, on right: 1 4
field_dec (59)
    on left: 6, on right: 2
field_dec3 (60)
    on left: 7 8, on right: 6 7
field_dec2 (61)
    on left: 9 10, on right: 7 8
method_dec (62)
    on left: 11, on right: 4
method_dec2 (63)
    on left: 12 13, on right: 11
method_dec4 (64)
    on left: 14 15, on right: 11 14
method_dec3 (65)
    on left: 16, on right: 14 15
block (66)
    on left: 17, on right: 11 29 30 34 35
var_decl_x (67)
    on left: 18 19, on right: 17 18
var_decl (68)
    on left: 20, on right: 18
id_p (69)
    on left: 21 22, on right: 20 21
type (70)
    on left: 23 24, on right: 6 12 16 20
stetement_x (71)
    on left: 25 26, on right: 17 25
statement (72)
    on left: 27 28 29 30 31 32 33 34, on right: 25
else_block (73)
    on left: 35 36, on right: 29
assign_op (74)
    on left: 37 38 39, on right: 27
method_call (75)
    on left: 40 41, on right: 28 47
location (76)
    on left: 42 43, on right: 27 46
expr_x (77)
    on left: 44 45, on right: 40 44
expr (78)
    on left: 46 47 48 49 50 51 52, on right: 27 29 30 31 43 44 45 49
    50 51 52 55
callout_arg_p (79)
    on left: 53 54, on right: 41 53
callout_arg (80)
    on left: 55 56, on right: 53 54
bin_op (81)
    on left: 57 58 59 60, on right: 49
arith_op (82)
    on left: 61 62 63 64 65, on right: 57
rel_op (83)
    on left: 66 67 68 69, on right: 58
eq_op (84)
    on left: 70 71, on right: 59
cond_op (85)
    on left: 72 73, on right: 60
literal (86)
    on left: 74 75 76, on right: 48
id (87)
    on left: 77, on right: 9 10 11 16 21 22 30 40 42 43
int_literal (88)
    on left: 78 79, on right: 74
decimal_literal (89)
    on left: 80, on right: 78
hex_literal (90)
    on left: 81, on right: 79
bool_literal (91)
    on left: 82 83, on right: 76
char_literal (92)
    on left: 84, on right: 75
string_literal (93)
    on left: 85, on right: 41 56


State 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program  go to state 2


State 1

    1 program: CLASS . PROGRAM '{' field_dec1 method_dec1 '}'

    PROGRAM  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: CLASS PROGRAM . '{' field_dec1 method_dec1 '}'

    '{'  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: CLASS PROGRAM '{' . field_dec1 method_dec1 '}'

    $default  reduce using rule 3 (field_dec1)

    field_dec1  go to state 6


State 6

    1 program: CLASS PROGRAM '{' field_dec1 . method_dec1 '}'
    2 field_dec1: field_dec1 . field_dec

    BOOLEAN  shift, and go to state 7
    INT      shift, and go to state 8

    $default  reduce using rule 5 (method_dec1)

    method_dec1  go to state 9
    field_dec    go to state 10
    type         go to state 11


State 7

   24 type: BOOLEAN .

    $default  reduce using rule 24 (type)


State 8

   23 type: INT .

    $default  reduce using rule 23 (type)


State 9

    1 program: CLASS PROGRAM '{' field_dec1 method_dec1 . '}'
    4 method_dec1: method_dec1 . method_dec

    '{'  shift, and go to state 12
    '}'  shift, and go to state 13

    method_dec  go to state 14


State 10

    2 field_dec1: field_dec1 field_dec .

    $default  reduce using rule 2 (field_dec1)


State 11

    6 field_dec: type . field_dec3 ';'

    '{'  shift, and go to state 15

    field_dec3  go to state 16
    field_dec2  go to state 17


State 12

   11 method_dec: '{' . method_dec2 '}' id '(' '[' method_dec4 ']' ')' block

    BOOLEAN  shift, and go to state 7
    INT      shift, and go to state 8
    VOID     shift, and go to state 18

    method_dec2  go to state 19
    type         go to state 20


State 13

    1 program: CLASS PROGRAM '{' field_dec1 method_dec1 '}' .

    $default  reduce using rule 1 (program)


State 14

    4 method_dec1: method_dec1 method_dec .

    $default  reduce using rule 4 (method_dec1)


State 15

    9 field_dec2: '{' . id '}'
   10           | '{' . id '[' INT_LIT ']' '}'

    IDENTIFIER  shift, and go to state 21

    id  go to state 22


State 16

    6 field_dec: type field_dec3 . ';'
    7 field_dec3: field_dec3 . ',' field_dec2

    ';'  shift, and go to state 23
    ','  shift, and go to state 24


State 17

    8 field_dec3: field_dec2 .

    $default  reduce using rule 8 (field_dec3)


State 18

   13 method_dec2: VOID .

    $default  reduce using rule 13 (method_dec2)


State 19

   11 method_dec: '{' method_dec2 . '}' id '(' '[' method_dec4 ']' ')' block

    '}'  shift, and go to state 25


State 20

   12 method_dec2: type .

    $default  reduce using rule 12 (method_dec2)


State 21

   77 id: IDENTIFIER .

    $default  reduce using rule 77 (id)


State 22

    9 field_dec2: '{' id . '}'
   10           | '{' id . '[' INT_LIT ']' '}'

    '['  shift, and go to state 26
    '}'  shift, and go to state 27


State 23

    6 field_dec: type field_dec3 ';' .

    $default  reduce using rule 6 (field_dec)


State 24

    7 field_dec3: field_dec3 ',' . field_dec2

    '{'  shift, and go to state 15

    field_dec2  go to state 28


State 25

   11 method_dec: '{' method_dec2 '}' . id '(' '[' method_dec4 ']' ')' block

    IDENTIFIER  shift, and go to state 21

    id  go to state 29


State 26

   10 field_dec2: '{' id '[' . INT_LIT ']' '}'

    INT_LIT  shift, and go to state 30


State 27

    9 field_dec2: '{' id '}' .

    $default  reduce using rule 9 (field_dec2)


State 28

    7 field_dec3: field_dec3 ',' field_dec2 .

    $default  reduce using rule 7 (field_dec3)


State 29

   11 method_dec: '{' method_dec2 '}' id . '(' '[' method_dec4 ']' ')' block

    '('  shift, and go to state 31


State 30

   10 field_dec2: '{' id '[' INT_LIT . ']' '}'

    ']'  shift, and go to state 32


State 31

   11 method_dec: '{' method_dec2 '}' id '(' . '[' method_dec4 ']' ')' block

    '['  shift, and go to state 33


State 32

   10 field_dec2: '{' id '[' INT_LIT ']' . '}'

    '}'  shift, and go to state 34


State 33

   11 method_dec: '{' method_dec2 '}' id '(' '[' . method_dec4 ']' ')' block

    '{'  shift, and go to state 35

    method_dec4  go to state 36
    method_dec3  go to state 37


State 34

   10 field_dec2: '{' id '[' INT_LIT ']' '}' .

    $default  reduce using rule 10 (field_dec2)


State 35

   16 method_dec3: '{' . type id '}'

    BOOLEAN  shift, and go to state 7
    INT      shift, and go to state 8

    type  go to state 38


State 36

   11 method_dec: '{' method_dec2 '}' id '(' '[' method_dec4 . ']' ')' block
   14 method_dec4: method_dec4 . ',' method_dec3

    ']'  shift, and go to state 39
    ','  shift, and go to state 40


State 37

   15 method_dec4: method_dec3 .

    $default  reduce using rule 15 (method_dec4)


State 38

   16 method_dec3: '{' type . id '}'

    IDENTIFIER  shift, and go to state 21

    id  go to state 41


State 39

   11 method_dec: '{' method_dec2 '}' id '(' '[' method_dec4 ']' . ')' block

    ')'  shift, and go to state 42


State 40

   14 method_dec4: method_dec4 ',' . method_dec3

    '{'  shift, and go to state 35

    method_dec3  go to state 43


State 41

   16 method_dec3: '{' type id . '}'

    '}'  shift, and go to state 44


State 42

   11 method_dec: '{' method_dec2 '}' id '(' '[' method_dec4 ']' ')' . block

    '{'  shift, and go to state 45

    block  go to state 46


State 43

   14 method_dec4: method_dec4 ',' method_dec3 .

    $default  reduce using rule 14 (method_dec4)


State 44

   16 method_dec3: '{' type id '}' .

    $default  reduce using rule 16 (method_dec3)


State 45

   17 block: '{' . var_decl_x stetement_x '}'

    $default  reduce using rule 19 (var_decl_x)

    var_decl_x  go to state 47


State 46

   11 method_dec: '{' method_dec2 '}' id '(' '[' method_dec4 ']' ')' block .

    $default  reduce using rule 11 (method_dec)


State 47

   17 block: '{' var_decl_x . stetement_x '}'
   18 var_decl_x: var_decl_x . var_decl

    BOOLEAN  shift, and go to state 7
    INT      shift, and go to state 8

    $default  reduce using rule 26 (stetement_x)

    var_decl     go to state 48
    type         go to state 49
    stetement_x  go to state 50


State 48

   18 var_decl_x: var_decl_x var_decl .

    $default  reduce using rule 18 (var_decl_x)


State 49

   20 var_decl: type . id_p ';'

    IDENTIFIER  shift, and go to state 21

    id_p  go to state 51
    id    go to state 52


State 50

   17 block: '{' var_decl_x stetement_x . '}'
   25 stetement_x: stetement_x . statement

    BREAK       shift, and go to state 53
    CALLOUT     shift, and go to state 54
    CONTINUE    shift, and go to state 55
    FOR         shift, and go to state 56
    IF          shift, and go to state 57
    RETURN      shift, and go to state 58
    IDENTIFIER  shift, and go to state 21
    '{'         shift, and go to state 45
    '}'         shift, and go to state 59

    block        go to state 60
    statement    go to state 61
    method_call  go to state 62
    location     go to state 63
    id           go to state 64


State 51

   20 var_decl: type id_p . ';'
   21 id_p: id_p . ',' id

    ';'  shift, and go to state 65
    ','  shift, and go to state 66


State 52

   22 id_p: id .

    $default  reduce using rule 22 (id_p)


State 53

   32 statement: BREAK . ';'

    ';'  shift, and go to state 67


State 54

   41 method_call: CALLOUT . '(' string_literal '[' callout_arg_p ']' ')'

    '('  shift, and go to state 68


State 55

   33 statement: CONTINUE . ';'

    ';'  shift, and go to state 69


State 56

   30 statement: FOR . id '=' expr ',' expr block

    IDENTIFIER  shift, and go to state 21

    id  go to state 70


State 57

   29 statement: IF . '(' expr ')' block '[' else_block ']'

    '('  shift, and go to state 71


State 58

   31 statement: RETURN . '[' expr ']' ';'

    '['  shift, and go to state 72


State 59

   17 block: '{' var_decl_x stetement_x '}' .

    $default  reduce using rule 17 (block)


State 60

   34 statement: block .

    $default  reduce using rule 34 (statement)


State 61

   25 stetement_x: stetement_x statement .

    $default  reduce using rule 25 (stetement_x)


State 62

   28 statement: method_call . ';'

    ';'  shift, and go to state 73


State 63

   27 statement: location . assign_op expr ';'

    PEQ  shift, and go to state 74
    MEQ  shift, and go to state 75
    '='  shift, and go to state 76

    assign_op  go to state 77


State 64

   40 method_call: id . '(' expr_x ')'
   42 location: id .
   43         | id . '[' expr ']'

    '('  shift, and go to state 78
    '['  shift, and go to state 79

    $default  reduce using rule 42 (location)


State 65

   20 var_decl: type id_p ';' .

    $default  reduce using rule 20 (var_decl)


State 66

   21 id_p: id_p ',' . id

    IDENTIFIER  shift, and go to state 21

    id  go to state 80


State 67

   32 statement: BREAK ';' .

    $default  reduce using rule 32 (statement)


State 68

   41 method_call: CALLOUT '(' . string_literal '[' callout_arg_p ']' ')'

    STR_LIT  shift, and go to state 81

    string_literal  go to state 82


State 69

   33 statement: CONTINUE ';' .

    $default  reduce using rule 33 (statement)


State 70

   30 statement: FOR id . '=' expr ',' expr block

    '='  shift, and go to state 83


State 71

   29 statement: IF '(' . expr ')' block '[' else_block ']'

    CALLOUT     shift, and go to state 54
    TRUE        shift, and go to state 84
    FALSE       shift, and go to state 85
    IDENTIFIER  shift, and go to state 21
    HEX_LIT     shift, and go to state 86
    INT_LIT     shift, and go to state 87
    CHAR_LIT    shift, and go to state 88
    '-'         shift, and go to state 89
    '('         shift, and go to state 90
    '!'         shift, and go to state 91

    method_call      go to state 92
    location         go to state 93
    expr             go to state 94
    literal          go to state 95
    id               go to state 64
    int_literal      go to state 96
    decimal_literal  go to state 97
    hex_literal      go to state 98
    bool_literal     go to state 99
    char_literal     go to state 100


State 72

   31 statement: RETURN '[' . expr ']' ';'

    CALLOUT     shift, and go to state 54
    TRUE        shift, and go to state 84
    FALSE       shift, and go to state 85
    IDENTIFIER  shift, and go to state 21
    HEX_LIT     shift, and go to state 86
    INT_LIT     shift, and go to state 87
    CHAR_LIT    shift, and go to state 88
    '-'         shift, and go to state 89
    '('         shift, and go to state 90
    '!'         shift, and go to state 91

    method_call      go to state 92
    location         go to state 93
    expr             go to state 101
    literal          go to state 95
    id               go to state 64
    int_literal      go to state 96
    decimal_literal  go to state 97
    hex_literal      go to state 98
    bool_literal     go to state 99
    char_literal     go to state 100


State 73

   28 statement: method_call ';' .

    $default  reduce using rule 28 (statement)


State 74

   38 assign_op: PEQ .

    $default  reduce using rule 38 (assign_op)


State 75

   39 assign_op: MEQ .

    $default  reduce using rule 39 (assign_op)


State 76

   37 assign_op: '=' .

    $default  reduce using rule 37 (assign_op)


State 77

   27 statement: location assign_op . expr ';'

    CALLOUT     shift, and go to state 54
    TRUE        shift, and go to state 84
    FALSE       shift, and go to state 85
    IDENTIFIER  shift, and go to state 21
    HEX_LIT     shift, and go to state 86
    INT_LIT     shift, and go to state 87
    CHAR_LIT    shift, and go to state 88
    '-'         shift, and go to state 89
    '('         shift, and go to state 90
    '!'         shift, and go to state 91

    method_call      go to state 92
    location         go to state 93
    expr             go to state 102
    literal          go to state 95
    id               go to state 64
    int_literal      go to state 96
    decimal_literal  go to state 97
    hex_literal      go to state 98
    bool_literal     go to state 99
    char_literal     go to state 100


State 78

   40 method_call: id '(' . expr_x ')'

    CALLOUT     shift, and go to state 54
    TRUE        shift, and go to state 84
    FALSE       shift, and go to state 85
    IDENTIFIER  shift, and go to state 21
    HEX_LIT     shift, and go to state 86
    INT_LIT     shift, and go to state 87
    CHAR_LIT    shift, and go to state 88
    '-'         shift, and go to state 89
    '('         shift, and go to state 90
    '!'         shift, and go to state 91

    method_call      go to state 92
    location         go to state 93
    expr_x           go to state 103
    expr             go to state 104
    literal          go to state 95
    id               go to state 64
    int_literal      go to state 96
    decimal_literal  go to state 97
    hex_literal      go to state 98
    bool_literal     go to state 99
    char_literal     go to state 100


State 79

   43 location: id '[' . expr ']'

    CALLOUT     shift, and go to state 54
    TRUE        shift, and go to state 84
    FALSE       shift, and go to state 85
    IDENTIFIER  shift, and go to state 21
    HEX_LIT     shift, and go to state 86
    INT_LIT     shift, and go to state 87
    CHAR_LIT    shift, and go to state 88
    '-'         shift, and go to state 89
    '('         shift, and go to state 90
    '!'         shift, and go to state 91

    method_call      go to state 92
    location         go to state 93
    expr             go to state 105
    literal          go to state 95
    id               go to state 64
    int_literal      go to state 96
    decimal_literal  go to state 97
    hex_literal      go to state 98
    bool_literal     go to state 99
    char_literal     go to state 100


State 80

   21 id_p: id_p ',' id .

    $default  reduce using rule 21 (id_p)


State 81

   85 string_literal: STR_LIT .

    $default  reduce using rule 85 (string_literal)


State 82

   41 method_call: CALLOUT '(' string_literal . '[' callout_arg_p ']' ')'

    '['  shift, and go to state 106


State 83

   30 statement: FOR id '=' . expr ',' expr block

    CALLOUT     shift, and go to state 54
    TRUE        shift, and go to state 84
    FALSE       shift, and go to state 85
    IDENTIFIER  shift, and go to state 21
    HEX_LIT     shift, and go to state 86
    INT_LIT     shift, and go to state 87
    CHAR_LIT    shift, and go to state 88
    '-'         shift, and go to state 89
    '('         shift, and go to state 90
    '!'         shift, and go to state 91

    method_call      go to state 92
    location         go to state 93
    expr             go to state 107
    literal          go to state 95
    id               go to state 64
    int_literal      go to state 96
    decimal_literal  go to state 97
    hex_literal      go to state 98
    bool_literal     go to state 99
    char_literal     go to state 100


State 84

   82 bool_literal: TRUE .

    $default  reduce using rule 82 (bool_literal)


State 85

   83 bool_literal: FALSE .

    $default  reduce using rule 83 (bool_literal)


State 86

   81 hex_literal: HEX_LIT .

    $default  reduce using rule 81 (hex_literal)


State 87

   80 decimal_literal: INT_LIT .

    $default  reduce using rule 80 (decimal_literal)


State 88

   84 char_literal: CHAR_LIT .

    $default  reduce using rule 84 (char_literal)


State 89

   50 expr: '-' . '(' expr ')'

    '('  shift, and go to state 108


State 90

   49 expr: '(' . expr bin_op expr ')'
   52     | '(' . expr ')'

    CALLOUT     shift, and go to state 54
    TRUE        shift, and go to state 84
    FALSE       shift, and go to state 85
    IDENTIFIER  shift, and go to state 21
    HEX_LIT     shift, and go to state 86
    INT_LIT     shift, and go to state 87
    CHAR_LIT    shift, and go to state 88
    '-'         shift, and go to state 89
    '('         shift, and go to state 90
    '!'         shift, and go to state 91

    method_call      go to state 92
    location         go to state 93
    expr             go to state 109
    literal          go to state 95
    id               go to state 64
    int_literal      go to state 96
    decimal_literal  go to state 97
    hex_literal      go to state 98
    bool_literal     go to state 99
    char_literal     go to state 100


State 91

   51 expr: '!' . '(' expr ')'

    '('  shift, and go to state 110


State 92

   47 expr: method_call .

    $default  reduce using rule 47 (expr)


State 93

   46 expr: location .

    $default  reduce using rule 46 (expr)


State 94

   29 statement: IF '(' expr . ')' block '[' else_block ']'

    ')'  shift, and go to state 111


State 95

   48 expr: literal .

    $default  reduce using rule 48 (expr)


State 96

   74 literal: int_literal .

    $default  reduce using rule 74 (literal)


State 97

   78 int_literal: decimal_literal .

    $default  reduce using rule 78 (int_literal)


State 98

   79 int_literal: hex_literal .

    $default  reduce using rule 79 (int_literal)


State 99

   76 literal: bool_literal .

    $default  reduce using rule 76 (literal)


State 100

   75 literal: char_literal .

    $default  reduce using rule 75 (literal)


State 101

   31 statement: RETURN '[' expr . ']' ';'

    ']'  shift, and go to state 112


State 102

   27 statement: location assign_op expr . ';'

    ';'  shift, and go to state 113


State 103

   40 method_call: id '(' expr_x . ')'
   44 expr_x: expr_x . ',' expr

    ')'  shift, and go to state 114
    ','  shift, and go to state 115


State 104

   45 expr_x: expr .

    $default  reduce using rule 45 (expr_x)


State 105

   43 location: id '[' expr . ']'

    ']'  shift, and go to state 116


State 106

   41 method_call: CALLOUT '(' string_literal '[' . callout_arg_p ']' ')'

    CALLOUT     shift, and go to state 54
    TRUE        shift, and go to state 84
    FALSE       shift, and go to state 85
    IDENTIFIER  shift, and go to state 21
    HEX_LIT     shift, and go to state 86
    INT_LIT     shift, and go to state 87
    CHAR_LIT    shift, and go to state 88
    STR_LIT     shift, and go to state 81
    '-'         shift, and go to state 89
    '('         shift, and go to state 90
    '!'         shift, and go to state 91

    method_call      go to state 92
    location         go to state 93
    expr             go to state 117
    callout_arg_p    go to state 118
    callout_arg      go to state 119
    literal          go to state 95
    id               go to state 64
    int_literal      go to state 96
    decimal_literal  go to state 97
    hex_literal      go to state 98
    bool_literal     go to state 99
    char_literal     go to state 100
    string_literal   go to state 120


State 107

   30 statement: FOR id '=' expr . ',' expr block

    ','  shift, and go to state 121


State 108

   50 expr: '-' '(' . expr ')'

    CALLOUT     shift, and go to state 54
    TRUE        shift, and go to state 84
    FALSE       shift, and go to state 85
    IDENTIFIER  shift, and go to state 21
    HEX_LIT     shift, and go to state 86
    INT_LIT     shift, and go to state 87
    CHAR_LIT    shift, and go to state 88
    '-'         shift, and go to state 89
    '('         shift, and go to state 90
    '!'         shift, and go to state 91

    method_call      go to state 92
    location         go to state 93
    expr             go to state 122
    literal          go to state 95
    id               go to state 64
    int_literal      go to state 96
    decimal_literal  go to state 97
    hex_literal      go to state 98
    bool_literal     go to state 99
    char_literal     go to state 100


State 109

   49 expr: '(' expr . bin_op expr ')'
   52     | '(' expr . ')'

    '+'   shift, and go to state 123
    '-'   shift, and go to state 124
    '*'   shift, and go to state 125
    '/'   shift, and go to state 126
    '%'   shift, and go to state 127
    '<'   shift, and go to state 128
    '>'   shift, and go to state 129
    ')'   shift, and go to state 130
    "<="  shift, and go to state 131
    ">="  shift, and go to state 132
    "=="  shift, and go to state 133
    "!="  shift, and go to state 134
    "&&"  shift, and go to state 135
    "||"  shift, and go to state 136

    bin_op    go to state 137
    arith_op  go to state 138
    rel_op    go to state 139
    eq_op     go to state 140
    cond_op   go to state 141


State 110

   51 expr: '!' '(' . expr ')'

    CALLOUT     shift, and go to state 54
    TRUE        shift, and go to state 84
    FALSE       shift, and go to state 85
    IDENTIFIER  shift, and go to state 21
    HEX_LIT     shift, and go to state 86
    INT_LIT     shift, and go to state 87
    CHAR_LIT    shift, and go to state 88
    '-'         shift, and go to state 89
    '('         shift, and go to state 90
    '!'         shift, and go to state 91

    method_call      go to state 92
    location         go to state 93
    expr             go to state 142
    literal          go to state 95
    id               go to state 64
    int_literal      go to state 96
    decimal_literal  go to state 97
    hex_literal      go to state 98
    bool_literal     go to state 99
    char_literal     go to state 100


State 111

   29 statement: IF '(' expr ')' . block '[' else_block ']'

    '{'  shift, and go to state 45

    block  go to state 143


State 112

   31 statement: RETURN '[' expr ']' . ';'

    ';'  shift, and go to state 144


State 113

   27 statement: location assign_op expr ';' .

    $default  reduce using rule 27 (statement)


State 114

   40 method_call: id '(' expr_x ')' .

    $default  reduce using rule 40 (method_call)


State 115

   44 expr_x: expr_x ',' . expr

    CALLOUT     shift, and go to state 54
    TRUE        shift, and go to state 84
    FALSE       shift, and go to state 85
    IDENTIFIER  shift, and go to state 21
    HEX_LIT     shift, and go to state 86
    INT_LIT     shift, and go to state 87
    CHAR_LIT    shift, and go to state 88
    '-'         shift, and go to state 89
    '('         shift, and go to state 90
    '!'         shift, and go to state 91

    method_call      go to state 92
    location         go to state 93
    expr             go to state 145
    literal          go to state 95
    id               go to state 64
    int_literal      go to state 96
    decimal_literal  go to state 97
    hex_literal      go to state 98
    bool_literal     go to state 99
    char_literal     go to state 100


State 116

   43 location: id '[' expr ']' .

    $default  reduce using rule 43 (location)


State 117

   55 callout_arg: expr .

    $default  reduce using rule 55 (callout_arg)


State 118

   41 method_call: CALLOUT '(' string_literal '[' callout_arg_p . ']' ')'
   53 callout_arg_p: callout_arg_p . ',' callout_arg

    ']'  shift, and go to state 146
    ','  shift, and go to state 147


State 119

   54 callout_arg_p: callout_arg .

    $default  reduce using rule 54 (callout_arg_p)


State 120

   56 callout_arg: string_literal .

    $default  reduce using rule 56 (callout_arg)


State 121

   30 statement: FOR id '=' expr ',' . expr block

    CALLOUT     shift, and go to state 54
    TRUE        shift, and go to state 84
    FALSE       shift, and go to state 85
    IDENTIFIER  shift, and go to state 21
    HEX_LIT     shift, and go to state 86
    INT_LIT     shift, and go to state 87
    CHAR_LIT    shift, and go to state 88
    '-'         shift, and go to state 89
    '('         shift, and go to state 90
    '!'         shift, and go to state 91

    method_call      go to state 92
    location         go to state 93
    expr             go to state 148
    literal          go to state 95
    id               go to state 64
    int_literal      go to state 96
    decimal_literal  go to state 97
    hex_literal      go to state 98
    bool_literal     go to state 99
    char_literal     go to state 100


State 122

   50 expr: '-' '(' expr . ')'

    ')'  shift, and go to state 149


State 123

   61 arith_op: '+' .

    $default  reduce using rule 61 (arith_op)


State 124

   62 arith_op: '-' .

    $default  reduce using rule 62 (arith_op)


State 125

   63 arith_op: '*' .

    $default  reduce using rule 63 (arith_op)


State 126

   64 arith_op: '/' .

    $default  reduce using rule 64 (arith_op)


State 127

   65 arith_op: '%' .

    $default  reduce using rule 65 (arith_op)


State 128

   66 rel_op: '<' .

    $default  reduce using rule 66 (rel_op)


State 129

   67 rel_op: '>' .

    $default  reduce using rule 67 (rel_op)


State 130

   52 expr: '(' expr ')' .

    $default  reduce using rule 52 (expr)


State 131

   68 rel_op: "<=" .

    $default  reduce using rule 68 (rel_op)


State 132

   69 rel_op: ">=" .

    $default  reduce using rule 69 (rel_op)


State 133

   70 eq_op: "==" .

    $default  reduce using rule 70 (eq_op)


State 134

   71 eq_op: "!=" .

    $default  reduce using rule 71 (eq_op)


State 135

   72 cond_op: "&&" .

    $default  reduce using rule 72 (cond_op)


State 136

   73 cond_op: "||" .

    $default  reduce using rule 73 (cond_op)


State 137

   49 expr: '(' expr bin_op . expr ')'

    CALLOUT     shift, and go to state 54
    TRUE        shift, and go to state 84
    FALSE       shift, and go to state 85
    IDENTIFIER  shift, and go to state 21
    HEX_LIT     shift, and go to state 86
    INT_LIT     shift, and go to state 87
    CHAR_LIT    shift, and go to state 88
    '-'         shift, and go to state 89
    '('         shift, and go to state 90
    '!'         shift, and go to state 91

    method_call      go to state 92
    location         go to state 93
    expr             go to state 150
    literal          go to state 95
    id               go to state 64
    int_literal      go to state 96
    decimal_literal  go to state 97
    hex_literal      go to state 98
    bool_literal     go to state 99
    char_literal     go to state 100


State 138

   57 bin_op: arith_op .

    $default  reduce using rule 57 (bin_op)


State 139

   58 bin_op: rel_op .

    $default  reduce using rule 58 (bin_op)


State 140

   59 bin_op: eq_op .

    $default  reduce using rule 59 (bin_op)


State 141

   60 bin_op: cond_op .

    $default  reduce using rule 60 (bin_op)


State 142

   51 expr: '!' '(' expr . ')'

    ')'  shift, and go to state 151


State 143

   29 statement: IF '(' expr ')' block . '[' else_block ']'

    '['  shift, and go to state 152


State 144

   31 statement: RETURN '[' expr ']' ';' .

    $default  reduce using rule 31 (statement)


State 145

   44 expr_x: expr_x ',' expr .

    $default  reduce using rule 44 (expr_x)


State 146

   41 method_call: CALLOUT '(' string_literal '[' callout_arg_p ']' . ')'

    ')'  shift, and go to state 153


State 147

   53 callout_arg_p: callout_arg_p ',' . callout_arg

    CALLOUT     shift, and go to state 54
    TRUE        shift, and go to state 84
    FALSE       shift, and go to state 85
    IDENTIFIER  shift, and go to state 21
    HEX_LIT     shift, and go to state 86
    INT_LIT     shift, and go to state 87
    CHAR_LIT    shift, and go to state 88
    STR_LIT     shift, and go to state 81
    '-'         shift, and go to state 89
    '('         shift, and go to state 90
    '!'         shift, and go to state 91

    method_call      go to state 92
    location         go to state 93
    expr             go to state 117
    callout_arg      go to state 154
    literal          go to state 95
    id               go to state 64
    int_literal      go to state 96
    decimal_literal  go to state 97
    hex_literal      go to state 98
    bool_literal     go to state 99
    char_literal     go to state 100
    string_literal   go to state 120


State 148

   30 statement: FOR id '=' expr ',' expr . block

    '{'  shift, and go to state 45

    block  go to state 155


State 149

   50 expr: '-' '(' expr ')' .

    $default  reduce using rule 50 (expr)


State 150

   49 expr: '(' expr bin_op expr . ')'

    ')'  shift, and go to state 156


State 151

   51 expr: '!' '(' expr ')' .

    $default  reduce using rule 51 (expr)


State 152

   29 statement: IF '(' expr ')' block '[' . else_block ']'

    ELSE  shift, and go to state 157

    $default  reduce using rule 36 (else_block)

    else_block  go to state 158


State 153

   41 method_call: CALLOUT '(' string_literal '[' callout_arg_p ']' ')' .

    $default  reduce using rule 41 (method_call)


State 154

   53 callout_arg_p: callout_arg_p ',' callout_arg .

    $default  reduce using rule 53 (callout_arg_p)


State 155

   30 statement: FOR id '=' expr ',' expr block .

    $default  reduce using rule 30 (statement)


State 156

   49 expr: '(' expr bin_op expr ')' .

    $default  reduce using rule 49 (expr)


State 157

   35 else_block: ELSE . block

    '{'  shift, and go to state 45

    block  go to state 159


State 158

   29 statement: IF '(' expr ')' block '[' else_block . ']'

    ']'  shift, and go to state 160


State 159

   35 else_block: ELSE block .

    $default  reduce using rule 35 (else_block)


State 160

   29 statement: IF '(' expr ')' block '[' else_block ']' .

    $default  reduce using rule 29 (statement)
